CREATE TABLE IF NOT EXISTS "USER"
(
    id       bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar NOT NULL,
    login    varchar NOT NULL,
    name     varchar,
    birthdate date
);

CREATE TABLE IF NOT EXISTS FILM
(
    id            bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          varchar NOT NULL,
    description   varchar(255),
    release_date  date    NOT NULL,
    duration      integer NOT NULL,
    mpa_rating_id bigint  NOT NULL
);

CREATE TABLE IF NOT EXISTS FRIEND
(
    user_id   bigint  NOT NULL,
    friend_id bigint  NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES "USER" (id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES "USER" (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "LIKE"
(
    user_id bigint NOT NULL,
    film_id bigint NOT NULL,
    PRIMARY KEY (user_id, film_id),
    FOREIGN KEY (user_id) REFERENCES "USER" (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES FILM (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRE
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    id       bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id  bigint NOT NULL,
    genre_id bigint NOT NULL,
    FOREIGN KEY (film_id) REFERENCES FILM (id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES GENRE (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MPA_RATING
(
    id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar NOT NULL,
    description varchar
);

CREATE TABLE IF NOT EXISTS REVIEW
(
    id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     varchar(5000) NOT NULL,
    is_positive boolean NOT NULL DEFAULT false,
    film_id     bigint NOT NULL,
    user_id     bigint NOT NULL,
    useful     int DEFAULT 0,
    FOREIGN KEY (film_id) REFERENCES FILM (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES "USER" (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEW_RATING
(
    review_id     bigint NOT NULL,
    user_id     bigint NOT NULL,
    is_positive BOOLEAN NOT NULL,
    FOREIGN KEY (review_id) REFERENCES REVIEW (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES "USER" (id) ON DELETE CASCADE,
    PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS EVENT
(
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `timestamp` BIGINT NOT NULL,
    user_id     bigint NOT NULL,
    type  varchar(6) NOT NULL,
    operation varchar(6) NOT NULL,
    entity_id bigint NOT NULL,
    FOREIGN KEY (user_id) REFERENCES "USER" (id) ON DELETE CASCADE
);

